package kr.or.ddit.basic;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

import kr.or.ddit.util.DBUtil;

/*
  	- 회원을 관리하는 프로그램을 작성하시오.
  	(오라클 DB의 MYMEMBER 테이블 이용)
  	
  	- 아래 메뉴의 기능을 모두 구현하시오.(CRUD 구현하기 연습 : create read update delete)
  	메뉴예시)
  	-- 작업 선택 --
  	1. 자료 추가
  	2. 자료 삭제
  	3. 자료 수정
  	4. 전체 자료 출력
  	0. 작업 끝.
  	-----------
  	작업선택 >> 
  	
  	자료추가할떄는 아이디가 주요키이기 때문에 id를 체크하는것도 있어야한다.
  	
*/
public class JdbcTest07 {
	Connection conn = null;
	PreparedStatement pstmt = null; 
	Statement stmt = null;
	ResultSet rs = null;
	Scanner sc = new Scanner(System.in);
	
	public static void main(String[] args) {
		new JdbcTest07().start();	
	}

	private void start() {
		while(true){
			int choice = displayMenu();
			switch(choice){
				case 1:		
					add();
					break;
				case 2:	
					delete();
					break;
				case 3:		
					update();
					break;
				case 4:
					show();
					break;
				case 5:
					System.exit(0);
				default:
					System.out.println("잘못 입력했습니다.");
					System.out.println("다시 입력하세요.");
			}
		}
	}

	private void add() {
		
		try {
			int count=0;
			String id;
			do{
				System.out.print("id를 입력 : ");
				id = sc.next();
				
				String sql = "select count(*) as cnt from mymember where mem_id = '"+id+"'";
				stmt = conn.createStatement();
				rs =  stmt.executeQuery(sql);
				
				if(rs.next()){
					count = rs.getInt("cnt");
				}
				
				if(count==1){
					System.out.println("중복된id입니다.");
				}
			}while(count==1);
			
			System.out.print("이름을 입력 : ");
			String name = sc.next();
			System.out.print("전화번호 입력 : ");
			String tel = sc.next();
			System.out.print("주소 입력 : ");
			String addr = sc.next();
			
			String sql2 = "insert into mymember(mem__id, mem_name, mem_tel, mem_addr)"
					+ " values(?,?,?,?)";
			
			pstmt = conn.prepareStatement(sql2);
			pstmt.setString(1, id);
			pstmt.setString(2, name);
			pstmt.setString(3, tel);
			pstmt.setString(4, addr);
			
			int cnt = pstmt.executeUpdate();
			
			if(cnt>1){
				System.out.println("등록성공");
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	private void delete() {
		
	}

	private void update() {
		
	}

	private void show() {
		
	}

	private int displayMenu() {
		System.out.println("-- 작업 선택 --");
		System.out.println("1. 자료 추가");
		System.out.println("2. 자료 삭제");
		System.out.println("3. 자료 수정");
		System.out.println("4. 전체 자료 출력");
		System.out.println("0. 작업 끝.");
		System.out.println("-----------");
		System.out.print("작업선택 >> ");
		int num = sc.nextInt();
		System.out.println();
		return num;
	}
	
	
	
	
}
