package kr.or.ddit.basic;

import java.util.HashSet;

public class SetTest {
	public static void main(String[] args) {
		/*
		  - List와 Set의 차이점
		    1. List
		     - 데이터의 순서(index)가 있다.
		     - 중복되는 데이터를 저장할 수 있다.
		    2. Set
		     - 데이터의 순서(index)가 없다.
		     - 중복되는 데이터를 저장할 수 없다. 
		 */
		HashSet hs1 = new HashSet();
		
		// Set에 데이터를 추가할 떄도 add()메서드를 사용한다.
		// add()메서드는 데이터 추가에 성공하면 true, 
		// 그렇지 않으면 false를 반환한다.
		hs1.add("DD");
		hs1.add("AA");
		hs1.add(2);
		hs1.add("CC");
		hs1.add("BB");
		hs1.add(1);
		hs1.add(3);
		
		System.out.println("Set의 개수 : " + hs1.size());
		System.out.println("Set의 데이터 : " + hs1);
		//입력할때의 순서와 출력할때의 순서가 다르게 나온다. => [1, 2, AA, 3, BB, CC, DD]
		//인덱스가 없기 때문에 순서가 뒤죽박죽 섞여서 나오는 것이다.
		
		// Set에 데이터를 추가할 떄 중복되면 false를 반환하고 데이터 추가에 실패한다.
		boolean isAdd = hs1.add("FF");
		System.out.println("중복되지 않을 때 : " + isAdd);
		System.out.println("Set의 데이터 : " + hs1);
		
		isAdd = hs1.add("CC");
		System.out.println("중복되지 않을 때 : " + isAdd);
		System.out.println("Set의 데이터 : " + hs1);
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	}//main
}//
