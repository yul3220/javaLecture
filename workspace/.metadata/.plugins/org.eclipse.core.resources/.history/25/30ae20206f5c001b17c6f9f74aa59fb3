package kr.or.ddit.basic.tcp;

import java.io.DataOutputStream;
import java.net.Socket;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

public class TcpMultiChatServer {
	// 접속한 클라이언트 정보를 저장할 Map객체 변수 선언
	// ==> key값 : 접속한 사람의 이름, value값 : 접속한 Socket객체
	//client와 연결되어 있는 소켓을 저장하기 위한 공간
	private Map<String, Socket> clientMap;
	
	// 생성자
	public TcpMultiChatServer(){
		// Map객체를 동기화 처리
		clientMap = Collections.synchronizedMap(
					new HashMap<String, Socket>()
				);
	}
	
	// 서버 프로그램의 시작메서드
	public void serverStart(){
		
	}
	
	// ClientMap에 저장된 모든 사용자에게 메시지를 전송하는 메서드
	private void sendToAll(String msg){//msg는 전송할 메시지
		// clientMap의 데이터 갯수만큼 반복
		for(String name : clientMap.keySet()){
			try {
				DataOutputStream dos = 
					new DataOutputStream(
						clientMap.get(name).getOutputStream()
					);
				
				dos.writeUTF(msg);//메시지를 전송
				
			} catch (Exception e) {
				
			}
		}
	}
	
	public static void main(String[] args) {
		new TcpMultiChatServer().serverStart();
	}
}
