package kr.or.ddit.basic;

import java.util.HashMap;

public class MapTest {
	public static void main(String[] args) {
		/*
		 Map ==> key값과 value값을 한 쌍으로 관리하는 객체 
		 	- key값은 중복을 허용하지 않고 순서가 없다.(Set의 특징을 갖는다)
		 	- value값은 중복을 허용한다.
		 */
		HashMap<String, String> map = new HashMap<>();
		
		// 자료 추가  ==> put(key값, value값)
		map.put("name", "홍길동");
		map.put("addr", "대전");
		map.put("tel", "010-1234-5678");
		
		System.out.println("map => "+ map);
		
		// 자료수정 ==> 데이터를 추가할 떄 key값이 같으면 나중에 입력한 값이 저장된다.
		map.put("addr", "서울");
		System.out.println("map => "+ map);
		
		// 자료 삭제 ==> remove(key값)
		//  ==> 'key'이 같은 자료를 찾아서 삭제한다.
		//  ==> 반환값 : 삭제한 자료의 value값
		/*String removeTel = map.remove("tel");
		System.out.println("map => "+ map);
		System.out.println("삭제된 value값 : " + removeTel);*/
		
		// 자료 읽기 ==> get(key값)
		//   ==> 주어진 'key값'과 같이 저장된 value값을 반환한다.
		System.out.println("이름 : " + map.get("name"));
		System.out.println("전화번호 : " + map.get("tel"));
		System.out.println();
		
		// key값이 존재하는지 여부를 나타내는 메서드 :  containsKey(key값)
		// 		==> 해당 'Key값'이 있으면 true, 없으면 false
		System.out.println("addr 키값의 존재 여부 : " + map.containsKey("addr"));
		System.out.println("age 키값의 존재 여부 : " + map.containsKey("age"));
		System.out.println();
		
		// 
	}
}//
