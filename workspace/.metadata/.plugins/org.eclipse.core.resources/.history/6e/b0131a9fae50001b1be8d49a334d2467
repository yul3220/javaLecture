package kr.or.ddit.basic;

import java.util.HashSet;
import java.util.Set;

public class EqulasHashCodeTest {
	public static void main(String[] args) {
		Person p1 = new Person();
		p1.setId(1);
		p1.setName("홍길동");
		
		Person p2 = new Person();
		/*p2.setId(2);
		p2.setName("일지매");*/
		p2.setId(1);
		p2.setName("홍길동");
		
		Person p3 = p1;
		
		System.out.println(p1==p2);
		//주소 값을 가지고 비교하기 때문에 이름이나 아이디가 같아도 결과는 false이다.
		System.out.println(p1.equals(p2));
		//주소가 달라도 이름이나 아이디가 같으면 같게끔 정의하기 위해서는 override를 통해 
		//다시 정의해 해야한다.
		System.out.println("-----------------------------------");
		
		Set<Person> testSet = new HashSet<>();
		testSet.add(p1);
		testSet.add(p2);
		
		System.out.println("set의 크기 : " + testSet.size());
	}//main
}//

class Person{
	private int id;
	private String name;
	
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	
	@Override
	public boolean equals(Object obj) {
		if(obj==null) return false;
		
		// 같은 유형의 클래스인지 검사
		if(this.getClass() != obj.getClass()){
			// getClass 객체의 종류를 알아내는 메서드
			return false;
		}
		
		if(this==obj){ // 참조값이 같은지 검사
			return true;
		}
		
		// 매개변수의 값을 현재 객체 유형으로 형변환한다.
		//형변환하는 이유 : 값을 꺼내오기 위해서 
		Person that = (Person) obj;
		
		if(this.name==null && that.name!=null){
			return false;
		}
		
		if(this.id==that.id && this.name==that.name){
			return true;
		}
		
		if(this.id==that.id&&this.name.equals(that.name)){
			return true;
		}
		return false;	
	}
	
	
}

//