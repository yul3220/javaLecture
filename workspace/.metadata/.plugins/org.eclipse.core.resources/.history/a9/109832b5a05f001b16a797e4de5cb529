package kr.or.ddit.basic;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

/*
 	LPROD테이블에 새로운 데이터를 추가하시오.
 	
 	조건) LPROD_GU와 LPROD_NM은 직접 입력 받아서 처리하고,
 		LPROD_ID는 현재의 LPROD_ID중 제일 큰 값보다 1만큼 증가된 값으로 한다.
 		그리고, 입력받은 lprod_gu가 이미 등록되어 있으면 다시 입력받아서 처리한다.
 */

public class JdbcTest06 {
	public static void main(String[] args) {
		Connection conn = null;
		PreparedStatement pstmt = null; 
		Statement stmt = null;
		ResultSet rs = null;
		Scanner scan = new Scanner(System.in);
		
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
			
			conn = DriverManager.getConnection(
					"jdbc:oracle:thin:@localhost:1521:xe",
					"JYR03",
					"java");
			
			while(true){
				System.out.print("LPROD_GU 입력 : ");
				String gu = scan.next();
				
				System.out.print("LPROD_NM 입력 : ");
				String nm = scan.next();
				
				String sql = "select lprod_id"
						+ " from lprod"
						+ " where lprod_gu = ?";
				
				pstmt = conn.prepareStatement(sql);
				
				pstmt.setString(1, gu);
				
				rs = pstmt.executeQuery();
				
				if(rs == null){
					sql = "insert into lprod"
						+ " select max(lprod_id)+1, ?, ?"
						+ "	from lprod";
					
					pstmt = conn.prepareStatement(sql);
					
					pstmt.setString(1, gu);
					pstmt.setString(2, nm);
					
					int cnt = pstmt.executeUpdate();
					
					System.out.println("반환값 : " + cnt);
					
					break;
				}else{
					System.out.println("다시입력하세요");
					continue;
				}
			}
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		}finally{
			if(rs != null)try{ rs.close(); }catch(SQLException e){}
			if(pstmt != null)try{ pstmt.close(); }catch(SQLException e){}
			if(conn != null)try{ conn.close(); }catch(SQLException e){}
		}
		
	}
}
